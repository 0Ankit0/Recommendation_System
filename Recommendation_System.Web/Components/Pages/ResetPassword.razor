@page "/reset-password"
@using System.ComponentModel.DataAnnotations
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Reset Password</h3>

<EditForm Model="resetPasswordModel" OnValidSubmit="HandleResetPassword" class="reset-password-form">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="email" class="form-label">Email</label>
        <InputText id="email" class="form-control" @bind-Value="resetPasswordModel.Email" />
        <ValidationMessage For="@(() => resetPasswordModel.Email)" />
    </div>
    <div class="mb-3">
        <label for="resetCode" class="form-label">Reset Code</label>
        <InputText id="resetCode" class="form-control" @bind-Value="resetPasswordModel.ResetCode" />
        <ValidationMessage For="@(() => resetPasswordModel.ResetCode)" />
    </div>
    <div class="mb-3">
        <label for="newPassword" class="form-label">New Password</label>
        <InputText id="newPassword" type="password" class="form-control" @bind-Value="resetPasswordModel.NewPassword" />
        <ValidationMessage For="@(() => resetPasswordModel.NewPassword)" />
    </div>
    <div class="mb-3">
        <label for="confirmPassword" class="form-label">Confirm New Password</label>
        <InputText id="confirmPassword" type="password" class="form-control" @bind-Value="confirmPassword" />
        <ValidationMessage For="@(() => confirmPassword)" />
    </div>
    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger">@errorMessage</div>
    }
    @if (!string.IsNullOrEmpty(successMessage))
    {
        <div class="alert alert-success">@successMessage</div>
    }
    <button type="submit" class="btn btn-primary" disabled="@isLoading">
        @if (isLoading)
        {
            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
            <span>Resetting...</span>
        }
        else
        {
            <span>Reset Password</span>
        }
    </button>
</EditForm>

<div class="mt-3">
    <a href="/login">Back to Login</a>
</div>

@code {
    private ResetPasswordRequest resetPasswordModel = new();
    private string confirmPassword = string.Empty;
    private bool isLoading = false;
    private string? errorMessage;
    private string? successMessage;

    private async Task HandleResetPassword()
    {
        errorMessage = null;
        successMessage = null;
        if (resetPasswordModel.NewPassword != confirmPassword)
        {
            errorMessage = "Passwords do not match.";
            return;
        }
        isLoading = true;
        try
        {
            var response = await Http.PostAsJsonAsync("/User/resetPassword", resetPasswordModel);
            if (response.IsSuccessStatusCode)
            {
                successMessage = "Password reset successful! You may now log in.";
                // Optionally redirect to login
                // Navigation.NavigateTo("/login");
            }
            else
            {
                var content = await response.Content.ReadAsStringAsync();
                errorMessage = "Password reset failed. " + content;
            }
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred: " + ex.Message;
        }
        isLoading = false;
    }

    public class ResetPasswordRequest
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = string.Empty;
        [Required]
        public string ResetCode { get; set; } = string.Empty;
        [Required]
        [MinLength(6)]
        public string NewPassword { get; set; } = string.Empty;
    }
}